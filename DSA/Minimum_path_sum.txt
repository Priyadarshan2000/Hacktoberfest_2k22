class Solution {
public:
    int dp[201][201];
    int f(vector<vector<int>>& grid,int n,int m,int i,int j)
    {
        if(i==n-1 && j==m-1)
            return grid[i][j];
        if(i>=n || j>=m)
            return 1000;
        if(dp[i][j]!=-1)
            return dp[i][j];
        int down=grid[i][j]+f(grid,n,m,i+1,j);
        int right=grid[i][j]+f(grid,n,m,i,j+1);
        return dp[i][j]=min(down,right);
    }
    
    int minPathSum(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        memset(dp,-1,sizeof(dp));
        return f(grid,n,m,0,0);
    }
};